"use strict";(self.webpackChunkengineering_playbook=self.webpackChunkengineering_playbook||[]).push([[3957],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return h}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(n),h=o,f=p["".concat(s,".").concat(h)]||p[h]||d[h]||a;return n?r.createElement(f,i(i({ref:t},u),{},{components:n})):r.createElement(f,i({ref:t},u))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},7751:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return h},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return d}});var r=n(3117),o=n(102),a=(n(7294),n(3905)),i=["components"],l={},s="[InfraSec](/docs/infrasec/) / Project Teardown Guide",c={unversionedId:"infrasec/teardown",id:"infrasec/teardown",title:"[InfraSec](README.md) / Project Teardown Guide",description:"When a project reaches the end of its lifetime and the client doesn't",source:"@site/docs/infrasec/teardown.md",sourceDirName:"infrasec",slug:"/infrasec/teardown",permalink:"/docs/infrasec/teardown",editUrl:"https://github.com/trussworks/Engineering-Playbook/edit/main/docs/infrasec/teardown.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"[InfraSec](README.md) / Professional Development",permalink:"/docs/infrasec/pro-dev"},next:{title:"[InfraSec](../README.md) / Terraform",permalink:"/docs/infrasec/terraform/"}},u={},d=[{value:"Terraform and AWS",id:"terraform-and-aws",level:2},{value:"SSL certificates",id:"ssl-certificates",level:2},{value:"CircleCI",id:"circleci",level:2},{value:"GitHub",id:"github",level:2},{value:"1Password",id:"1password",level:2}],p={toc:d};function h(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"infrasec--project-teardown-guide"},(0,a.kt)("a",{parentName:"h1",href:"/docs/infrasec/"},"InfraSec")," / Project Teardown Guide"),(0,a.kt)("p",null,"When a project reaches the end of its lifetime and the client doesn't\nwant to continue it, we need to teardown all the infrastructure we've\ncreated for the project -- sometimes on relatively short notice. This\nguide is intended to provide a step-by-step procedure for tearing down\ninfrastructure we've created for a project and highlight any potential\nsources of trouble."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#terraform-and-aws"},"Terraform and AWS")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#ssl-certificates"},"SSL certificates")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#circleci"},"CircleCI")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#github"},"GitHub")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#1password"},"1Password"))),(0,a.kt)("h2",{id:"terraform-and-aws"},"Terraform and AWS"),(0,a.kt)("p",null,"Your first task should be shutting down all the AWS infrastructure\nyou've built for your project. When you do this, you'll need to proceed\nin basically the reverse order you created all the resources. Here are\nsome guidelines when tearing down Terraform namespaces:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Tear down accounts that don't hold resources for organization-wide\npurposes first -- leave your infra, id, and org-root accounts for last.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"If you were using Atlantis to maintain a namespace, and you have this\ncomponent in your ",(0,a.kt)("inlineCode",{parentName:"p"},"terraform.tf")," ",(0,a.kt)("inlineCode",{parentName:"p"},"backend")," configuration:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-text"},'role_arn       = "arn:aws:iam::123456789000:role/atlantis"\n')),(0,a.kt)("p",{parentName:"li"},"Then before you begin tearing down that namespace, you need to remove\nthis line, run a ",(0,a.kt)("inlineCode",{parentName:"p"},"terraform apply"),", and then do your ",(0,a.kt)("inlineCode",{parentName:"p"},"terraform destroy"),".\nIf you do not do this, then your ",(0,a.kt)("inlineCode",{parentName:"p"},"destroy")," will fail and the state will\nbecome corrupted because you will destroy the role Terraform is using\nto perform the destroy. Doing the ",(0,a.kt)("inlineCode",{parentName:"p"},"terraform apply")," allows Terraform to\ncleanly change the backend configuration first.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Similarly, when tearing down the ",(0,a.kt)("inlineCode",{parentName:"p"},"admin-global")," namespace, you should\nchange your ",(0,a.kt)("inlineCode",{parentName:"p"},".aws/config")," profile for the account you're destroying to\nuse the ",(0,a.kt)("inlineCode",{parentName:"p"},"OrganizationAccountAccessRole")," with the ",(0,a.kt)("inlineCode",{parentName:"p"},"org-root")," account as\nthe ",(0,a.kt)("inlineCode",{parentName:"p"},"source_profile"),". This prevents you from having the same problem\nwhen your ",(0,a.kt)("inlineCode",{parentName:"p"},"admin")," role is destroyed.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Do not destroy resources in the ",(0,a.kt)("inlineCode",{parentName:"p"},"admin-global")," namespace until all\nother namespaces for the account except the ",(0,a.kt)("inlineCode",{parentName:"p"},"bootstrap")," namespace have\nbeen torn down. Don't destroy ",(0,a.kt)("inlineCode",{parentName:"p"},"bootstrap")," until ",(0,a.kt)("inlineCode",{parentName:"p"},"admin-global")," has been\ntorn down.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"When you are ready to tear down the ",(0,a.kt)("inlineCode",{parentName:"p"},"org-root")," account, create an IAM\nuser ",(0,a.kt)("em",{parentName:"p"},"without")," Terraform, give it credentials and attach an MFA, and\nchange your ",(0,a.kt)("inlineCode",{parentName:"p"},"org-root")," profile to use those credentials. This will allow\nyou to cleanly tear down the entire ",(0,a.kt)("inlineCode",{parentName:"p"},"org-root")," account safely, otherwise\nyou will delete the IAM user you are using to tear down the account in\nthe middle of the ",(0,a.kt)("inlineCode",{parentName:"p"},"destroy")," and corrupt the state.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"It's easiest to wait until all resources in all your accounts are\ndestroyed to begin closing accounts; this will remove all the\norganization SCPs and let you remove accounts from the organization\nas you go.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"If your organization has an SCP applied to OUs which restricts editing billing data (which is a common practice for Truss), you will need to remove that SCP from accounts you're attempting to close first. You can do this either by removing the SCP from the affected OU or moving the account out of the affected OU.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"In order to completely close an account (aside from the ",(0,a.kt)("inlineCode",{parentName:"p"},"org-root"),'\naccount), you\'ll need to go through the password recovery procedure for\nthe root user account (ie, you need to try to log in with the email\naddress for the account and click the "Forgot Password" link), then\nset up billing information for the account. Once you have done that,\nyou can safely remove the account from the AWS Organization (either\nfrom the console or using the CLI) and then close it from the My\nAccount panel.'))),(0,a.kt)("h2",{id:"ssl-certificates"},"SSL certificates"),(0,a.kt)("p",null,"For most projects, we'll hopefully be able to use AWS ACM certificates,\nand those will get torn down with our Terraform teardown above. However,\nif we've bought additional SSL certificates through another vendor, such\nas SSLMate, we should revoke those certificates and close that account\nas well."),(0,a.kt)("h2",{id:"circleci"},"CircleCI"),(0,a.kt)("p",null,"Assuming you've used CircleCI for your CI/CD pipeline on the project,\nyou should be able to just terminate your CircleCI support plan as soon\nas you don't need to do anymore deploys or validate code. You can do this\nfrom the \"Project Settings\" page on the CircleCI dashboard."),(0,a.kt)("h2",{id:"github"},"GitHub"),(0,a.kt)("p",null,"Once you've torn down your AWS infrastructure and CircleCI, you can\nshutdown your GitHub organization for the project. Here are the\nguidelines for taking down your GitHub organization:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Make sure the client has been able to make an archive of all\nrepositories before you do anything else. Code we build for a client\nbelongs to them, so we need to ensure they are able to keep a copy."),(0,a.kt)("li",{parentName:"ul"},"If we are allowed (this varies based on the terms of the contract), we\nshould make sure we keep an archive of any code repositories we want\nto retain."),(0,a.kt)("li",{parentName:"ul"},"Delete any GitHub users that were created for CI/CD automation or other\npurposes. These are commonly created to allow CI/CD to access private\nrepositories."),(0,a.kt)("li",{parentName:"ul"},"Once the above steps have been completed, you can go into the settings\nfor the GitHub organization and close it down. ",(0,a.kt)("em",{parentName:"li"},"This will delete all\nrepositories in the organization"),", so make sure you're ready for that\nbefore you do this.")),(0,a.kt)("h2",{id:"1password"},"1Password"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Deleting your 1Password account and vault for the project should be the\nvery last thing you do.")," This is (hopefully) where you've kept all your\ncredentials for services, software, and accounts that this project uses,\nso getting rid of this makes it ",(0,a.kt)("em",{parentName:"p"},"extremely")," difficult to clean up anything\nelse you were using for your project. We recommend that you carefully\nreview the previous steps of this guide and look at the credentials kept\nin 1Password to ensure that you've closed down everything else that you\nare relying on 1Password for."))}h.isMDXComponent=!0}}]);