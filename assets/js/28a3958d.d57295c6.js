"use strict";(self.webpackChunkengineering_playbook=self.webpackChunkengineering_playbook||[]).push([[3959],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return m}});var a=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=a.createContext({}),c=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=c(e.components);return a.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(t),m=i,g=d["".concat(s,".").concat(m)]||d[m]||u[m]||r;return t?a.createElement(g,o(o({ref:n},p),{},{components:t})):a.createElement(g,o({ref:n},p))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=t.length,o=new Array(r);o[0]=d;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var c=2;c<r;c++)o[c]=t[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},647:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return c},assets:function(){return p},toc:function(){return u},default:function(){return m}});var a=t(7462),i=t(3366),r=(t(7294),t(3905)),o=["components"],l={},s="[Tools and Practice](/engineering-playbook/docs/developing/) / Technical Design",c={unversionedId:"developing/technical-design/README",id:"developing/technical-design/README",title:"[Tools and Practice](../README.md) / Technical Design",description:"Overview",source:"@site/docs/developing/technical-design/README.md",sourceDirName:"developing/technical-design",slug:"/developing/technical-design/",permalink:"/engineering-playbook/docs/developing/technical-design/",editUrl:"https://github.com/trussworks/Engineering-Playbook/edit/main/docs/developing/technical-design/README.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"[Tools and Practice](../README.md) / Slack Best Practices",permalink:"/engineering-playbook/docs/developing/slack/"},next:{title:"Title",permalink:"/engineering-playbook/docs/developing/technical-design/design-document-template"}},p={},u=[{value:"Overview",id:"overview",level:2},{value:"Design Documents",id:"design-documents",level:2},{value:"Workflow Incorporation",id:"workflow-incorporation",level:2},{value:"Resources",id:"resources",level:2}],d={toc:u};function m(e){var n=e.components,t=(0,i.Z)(e,o);return(0,r.kt)("wrapper",(0,a.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"tools-and-practice--technical-design"},(0,r.kt)("a",{parentName:"h1",href:"/engineering-playbook/docs/developing/"},"Tools and Practice")," / Technical Design"),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("p",null,"This section provides some guidance\nfor designing new features or architectural changes.\nWhile process may change based on project needs\n(such as existing client process or team size),\nthese resources can provide a foundation when necessary."),(0,r.kt)("p",null,"Some purposes of providing a process for technical design are to:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"clarify problem statements and client value."),(0,r.kt)("li",{parentName:"ul"},"guide Engineers through breaking down complex problems."),(0,r.kt)("li",{parentName:"ul"},"facilitate collaboration amongst Engineers."),(0,r.kt)("li",{parentName:"ul"},"share information across teams."),(0,r.kt)("li",{parentName:"ul"},"empower Engineers of all levels to make and contribute to architectural decisions.")),(0,r.kt)("h2",{id:"design-documents"},"Design Documents"),(0,r.kt)("p",null,"Design documents help share and collaborate on technical decisions.\nThey become necessary when a feature or architectural change\nis unclear based on individual pieces or work,\nhas significant unknowns,\nor has long term and widespread impact.\nSome examples where they are appropriate include:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"building the foundation for a new application."),(0,r.kt)("li",{parentName:"ul"},"designing a set of APIs with no existing pattern."),(0,r.kt)("li",{parentName:"ul"},"implementing a new authorization pattern throughout a codebase.")),(0,r.kt)("p",null,"Designs may vary significantly based on the problem domain,\nbut the ",(0,r.kt)("a",{parentName:"p",href:"/engineering-playbook/docs/developing/technical-design/design-document-template"},"provided template"),"\nwill address many commonalities.\nUsing a consistent template also helps to establish a common language among the team and company."),(0,r.kt)("p",null,"Try to keep these broad guidelines in mind while you work:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Always define and readdress stakeholder value."),(0,r.kt)("li",{parentName:"ul"},"Discover your audience and keep them in mind while writing.\nThe document may be read by:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Engineers directly responsible for implementation."),(0,r.kt)("li",{parentName:"ul"},"Engineers on other teams who need to be aware of decisions and changes in the codebase."),(0,r.kt)("li",{parentName:"ul"},"Clients, Product Managers, and/or Team Leads looking for a solution overview and resource considerations."),(0,r.kt)("li",{parentName:"ul"},"Security experts assessing risk."))),(0,r.kt)("li",{parentName:"ul"},"Foster inclusive collaboration.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Emphasize main points,\nbut provide resources for less experienced team members\nor people removed from the subject area.\nRely heavily on links to external documentation."),(0,r.kt)("li",{parentName:"ul"},"Consider enabling less experienced Engineers to lead design with guidance.\nLearning technical design can be a great avenue for career growth,\nand ultimately levels up people and teams."),(0,r.kt)("li",{parentName:"ul"},"Find common language.\nDomain specific language may be necessary,\nbut when possible provide clarification\nor use common terms.")))),(0,r.kt)("p",null,"Note that design documents are not a substitute for early design discussions.\nIdeas should be discussed before a more extensive design is applied.\nFind subject experts and stakeholders early to vet proposals."),(0,r.kt)("h2",{id:"workflow-incorporation"},"Workflow Incorporation"),(0,r.kt)("p",null,"Once a design document is accepted,\nit becomes a resource for the Development Cycle.\nThe ",(0,r.kt)("a",{parentName:"p",href:"../../cycle/README.md"},"Development Cycle Guide"),"\nprovides a more in depth view of how Truss iterates on work\nand should be consulted for implementation.\nHowever, a design doc can be helpful with starting that process.\nIt can help to:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"identify epics among the ",(0,r.kt)("a",{parentName:"li",href:"/engineering-playbook/docs/developing/technical-design/design-document-template#proposed-solution"},"proposed solution"),"."),(0,r.kt)("li",{parentName:"ul"},"break out small pieces of work from the ",(0,r.kt)("a",{parentName:"li",href:"/engineering-playbook/docs/developing/technical-design/design-document-template#implementation"},"implementation section"),"."),(0,r.kt)("li",{parentName:"ul"},"prioritize identified unknowns early on, clarifying long term work.")),(0,r.kt)("p",null,"Note that design documents are not a go-ahead for implementation,\nnor are they a substitute for agile workflow.\nPriorities may change based on resources, roadmaps, or unknown constraints.\nThe initial design may be used as a measure for completion,\nbut maintain an agile approach,\nreaddress tradeoffs,\nand be adaptable to changes during the implementation phase."),(0,r.kt)("h2",{id:"resources"},"Resources"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://buriti.ca/6-lessons-i-learned-while-implementing-technical-rfcs-as-a-management-tool-34687dbf46cb"},"6 Lessons I learned while implementing technical RFCs as a management tool")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/rust-lang/rfcs/blob/master/0000-template.md"},"Rust RFC Template"))))}m.isMDXComponent=!0}}]);